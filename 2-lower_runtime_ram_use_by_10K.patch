commit d5bab05a579b60a9f12e3d21d76f69736ce25cbd
Author: Dmitry Grinberg <dmitrygr@gmail.com>
Date:   Sat Dec 31 18:48:57 2022 -0600

    make getting some poke info FASTER, use that to need a LOT less ram
    
    No longer cache all poke names in RAM! Saves over 10K runtime RAM
    (matters on PalmOS 1.0)

diff --git a/Rsc/Palmkedex_Rsc.rcp b/Rsc/Palmkedex_Rsc.rcp
index 01bab12..308d0d5 100644
--- a/Rsc/Palmkedex_Rsc.rcp
+++ b/Rsc/Palmkedex_Rsc.rcp
@@ -119,7 +119,7 @@ END
 FORM ID PkmnMainForm   AT ( 0 0 160 160 )
 NOFRAME
 BEGIN
-    TITLE "Loading..."
+    TITLE "                "
 	
 	FORMBITMAP AT (1 16) BITMAP LoadingBitmapFamily
 
@@ -146,7 +146,7 @@ END
 FORM ID PkmnTypeForm  AT ( 0 0 160 160 )
 NOFRAME
 BEGIN
-    TITLE "Loading..."
+    TITLE "                "
 	
 	
 	POPUPTRIGGER "Type" ID PkmnTypePopUpTrigger  AT (121 1 39 12)  LEFTANCHOR
diff --git a/Src/Main.c b/Src/Main.c
index 309572e..d5b0ab8 100644
--- a/Src/Main.c
+++ b/Src/Main.c
@@ -8,7 +8,6 @@ void SetupListNameVars(SharedVariables *sharedVars, Int16 itemNum)
 {
 	char numItoA[4];
 	Err err = errNone;
-	SpeciesName *species;
 	Int16 numChars = 3;
 	Char *buffer;
 
@@ -17,13 +16,12 @@ void SetupListNameVars(SharedVariables *sharedVars, Int16 itemNum)
 	MemSet(buffer, sizeof(Char[5]), 0);
 
 	if (sharedVars->sizeAfterFiltering == pokeGetNumber()) {
-		err = FtrGet(appFileCreator, ftrPkmnNamesNum, (UInt32*)&species);
-		ErrFatalDisplayIf (err != errNone, "Failed to load pokemon names");
-
-		StrIToA(numItoA, itemNum+1);
 		
-		StrCopy(sharedVars->pkmnLstNameStr, species[itemNum].name);
+		StrIToA(numItoA, itemNum + 1);
+		
+		StrCopy(sharedVars->pkmnLstNameStr, pokeNameGet(itemNum + 1));
 	} else {
+		
 		StrIToA(numItoA, sharedVars->filteredPkmnNumbers[itemNum]);
 		StrCopy(sharedVars->pkmnLstNameStr, sharedVars->filteredList[itemNum].name);
 	}
@@ -103,12 +101,12 @@ static void PrepareMemoryForSearch(SharedVariables *sharedVars)
 	MemSet(sharedVars->filteredPkmnNumbers, sizeof(UInt16[MAX_SEARCH_RESULT_LEN]), 0);
 }
 
-static Boolean IsNameShorterThanQuery(Char *pkmnName, UInt16 searchLen)
+static Boolean IsNameShorterThanQuery(const Char *pkmnName, UInt16 searchLen)
 {
 	return StrLen(pkmnName) < searchLen-1;
 }
 
-static Boolean NameMatchesQuery(Char *pkmnName, Char *searchStr, UInt16 searchLen)
+static Boolean NameMatchesQuery(const Char *pkmnName, const Char *searchStr, UInt16 searchLen)
 {
 	UInt16 i;
 
@@ -129,15 +127,11 @@ static Boolean NameMatchesQuery(Char *pkmnName, Char *searchStr, UInt16 searchLe
 static void FilterDataSet(Char charInserted)
 {
 	UInt16 searchLen, matchCount, i;
-	SpeciesName *species;
 	SharedVariables *sharedVars;
 	Char searchStr[MAX_PKMN_NAME_LEN+1] = "";
 	Char substringPkmnName[MAX_PKMN_NAME_LEN+1] = "";
 	Err err = errNone;
 
-	err = FtrGet(appFileCreator, ftrPkmnNamesNum, (UInt32*)&species);
-	ErrFatalDisplayIf (err != errNone, "Failed to load pokemon names");
-
 	err = FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 	ErrFatalDisplayIf (err != errNone, "Failed to load shared variables");
 
@@ -157,14 +151,14 @@ static void FilterDataSet(Char charInserted)
 
 	for (i = 0; i < pokeGetNumber(); i++)
 	{
-		if (IsNameShorterThanQuery(species[i].name, searchLen))
+		if (IsNameShorterThanQuery(pokeNameGet(i + 1), searchLen))
 		{
 			continue;
 		}
 		
-		if (NameMatchesQuery(species[i].name, searchStr, searchLen))
+		if (NameMatchesQuery(pokeNameGet(i + 1), searchStr, searchLen))
 		{
-			StrCopy(sharedVars->filteredList[matchCount].name, species[i].name);
+			StrCopy(sharedVars->filteredList[matchCount].name, pokeNameGet(i + 1));
 			sharedVars->filteredPkmnNumbers[matchCount] = i+1;
 			matchCount++;
 		}
diff --git a/Src/Palmkedex.c b/Src/Palmkedex.c
index 43ac937..5103563 100644
--- a/Src/Palmkedex.c
+++ b/Src/Palmkedex.c
@@ -143,24 +143,6 @@ static void MakeSharedVariables()
 	ErrFatalDisplayIf (err != errNone, "Failed to set feature memory");
 }
 
-static void LoadSpecies()
-{
-	SpeciesName *species;
-	UInt16 i;
-	Err err = errNone;
-
-	species = (SpeciesName *)MemPtrNew(sizeof(SpeciesName) * pokeGetNumber());
-	ErrFatalDisplayIf ((!species), "Out of memory");
-
-	for (i = 0; i < pokeGetNumber(); i++)
-	{
-		pokeNameGet(species[i].name, i + 1 /* as pokes are 1-based */);
-	}
-	
-	err = FtrSet(appFileCreator, ftrPkmnNamesNum, (UInt32)species);
-	ErrFatalDisplayIf (err != errNone, "Failed to set feature memory");
-}
-
 static Err SetColorDepth(void)
 {
 	UInt32 supportedDepths, desiredDepth = 8, romVersion;
@@ -201,23 +183,13 @@ static Err SetColorDepth(void)
 
 static Err AppStart(void)
 {
-	LoadSpecies();
+	pokeInfoInit();
 	MakeSharedVariables();
 	SetColorDepth();
 
 	return errNone;
 }
 
-static void UnloadSpecies()
-{
-	void *ptr;
-	
-	if (errNone == FtrGet(appFileCreator, ftrPkmnNamesNum, (UInt32*)&ptr))
-		MemPtrFree(ptr);
-	
-	FtrUnregister(appFileCreator, ftrPkmnNamesNum);
-}
-
 static void FreeSharedVariables()
 {
 	UInt32 pstSharedInt;
@@ -238,10 +210,6 @@ static void FreeSharedVariables()
 		MemPtrFree(sharedVars->filteredPkmnNumbers);
 	}
 
-	if ((UInt32)sharedVars->pkmnFormTitle != 0)
-	{
-		MemPtrFree(sharedVars->pkmnFormTitle);
-	}
 	MemPtrFree(sharedVars);
 	FtrUnregister(appFileCreator, ftrShrdVarsNum);
 }
@@ -254,11 +222,10 @@ static void FreeSharedVariables()
 
 static void AppStop(void)
 {
-    UnloadSpecies();
 	FreeSharedVariables();
 	/* Close all the open forms. */
 	FrmCloseAllForms();
-
+	pokeInfoDeinit();
 }
 
 static Err loadSonyHrLib(UInt16 *hrLibRefP)
@@ -303,6 +270,7 @@ UInt32 PilotMain(UInt16 cmd, MemPtr cmdPBP, UInt16 launchFlags)
 		
 		UInt16 sonyHrLibRef;
 		
+
 		error = AppStart();
 		if (error) 
 			return error;
diff --git a/Src/Palmkedex.h b/Src/Palmkedex.h
index e23f448..1fc4b35 100644
--- a/Src/Palmkedex.h
+++ b/Src/Palmkedex.h
@@ -23,9 +23,9 @@
 #define appPrefVersionNum 0x01
 
 #define ftrPokeImage			0
-#define ftrPkmnNamesNum			1
-#define ftrShrdVarsNum			2
-#define ftrOsPatchState			3
+#define ftrShrdVarsNum			1
+#define ftrOsPatchState			2
+#define ftrPokeInfoState		3
 
 #define QUADRUPLE_DAMAGE 400
 #define DOUBLE_DAMAGE    200
@@ -50,7 +50,6 @@ typedef struct SharedVariables
     UInt16 sizeAfterFiltering;
     SpeciesName *filteredList;
     UInt16 *filteredPkmnNumbers;
-    Char *pkmnFormTitle;
     Char pkmnLstNumStr[5];
     Char pkmnLstNameStr[POKEMON_NAME_LEN + 1];
 } SharedVariables;
@@ -70,7 +69,7 @@ UInt16 GetPkmnId(Int16 selection);
 // PkmnMain.c
 Boolean PkmnMainFormHandleEvent(EventType *eventP);
 void LoadPkmnStats();
-void SetFormTitle(SharedVariables *sharedVars);
+void SetFormTitle(SharedVariables *sharedVars);	//used by PkmnType.c too
 void SetLabelInfo(UInt16 labelId, UInt8 stat, FormType *frm);
 void SetDescriptionField(UInt16 selectedPkmnId);
 
diff --git a/Src/PkmnMain.c b/Src/PkmnMain.c
index 1e7cd4b..5579f74 100644
--- a/Src/PkmnMain.c
+++ b/Src/PkmnMain.c
@@ -169,36 +169,13 @@ void SetLabelInfo(UInt16 labelId, UInt8 stat, FormType *frm)
 
 void SetFormTitle(SharedVariables *sharedVars)
 {
-	SpeciesName *species;
-	Char *numStr;
-	Err err = errNone;
+	char titleStr[24];
 
-	err = FtrGet(appFileCreator, ftrPkmnNamesNum, (UInt32*)&species);
-	ErrFatalDisplayIf(err != errNone, "Failed to load feature memory");
-
-	if ((UInt32)sharedVars->pkmnFormTitle != 0)
-	{
-		MemPtrFree(sharedVars->pkmnFormTitle);
-	}
-
-	sharedVars->pkmnFormTitle = (Char *)MemPtrNew(sizeof(Char[18]));
-	if ((UInt32)sharedVars->pkmnFormTitle == 0)
-		return;
-	MemSet(sharedVars->pkmnFormTitle, sizeof(Char[18]), 0);
-
-	numStr = (Char *)MemPtrNew(sizeof(Char[5]));
-	if ((UInt32)numStr == 0)
-		return;
-	MemSet(numStr, sizeof(Char[5]), 0);
-
-	StrCopy(sharedVars->pkmnFormTitle, species[sharedVars->selectedPkmnId - 1].name);
-	StrCat(sharedVars->pkmnFormTitle, " #");
-	StrIToA(numStr, sharedVars->selectedPkmnId);
-	StrCat(sharedVars->pkmnFormTitle, numStr);
-
-	FrmSetTitle(FrmGetActiveForm(), sharedVars->pkmnFormTitle);
+	StrCopy(titleStr, pokeNameGet(sharedVars->selectedPkmnId));
+	StrCat(titleStr, " #");
+	StrIToA(titleStr + StrLen(titleStr), sharedVars->selectedPkmnId);
 
-	MemPtrFree(numStr);
+	FrmCopyTitle(FrmGetActiveForm(), titleStr);
 }
 
 static void PkmnDescriptionScroll(WinDirectionType direction)
diff --git a/Src/PkmnType.c b/Src/PkmnType.c
index de6d0c0..705db7e 100644
--- a/Src/PkmnType.c
+++ b/Src/PkmnType.c
@@ -159,18 +159,16 @@ static void SetMenuSelection()
 
 static void InitializeForm()
 {
-    UInt32 pstSharedInt;
 	SharedVariables *sharedVars;
 	Err err = errNone;
 
-	err = FtrGet(appFileCreator, ftrShrdVarsNum, &pstSharedInt);
+	err = FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 	ErrFatalDisplayIf (err != errNone, "Failed to load feature memory");
-	sharedVars = (SharedVariables *)pstSharedInt;
 
     DrawTypeIcons(sharedVars->selectedPkmnId);
 
     SetMenuSelection();
-    FrmSetTitle(FrmGetActiveForm(), sharedVars->pkmnFormTitle);
+    SetFormTitle(sharedVars);
 }
 
 /*
diff --git a/Src/osPatches.68k.o b/Src/osPatches.68k.o
deleted file mode 100644
index ea58214..0000000
Binary files a/Src/osPatches.68k.o and /dev/null differ
diff --git a/Src/pokeInfo.c b/Src/pokeInfo.c
index cd70cc9..5bff6ab 100644
--- a/Src/pokeInfo.c
+++ b/Src/pokeInfo.c
@@ -80,49 +80,36 @@ void pokeImageRelease(MemHandle pokeImage)
 	DmReleaseResource(pokeImage);
 }
 
-static Boolean pokeGetStruct(struct PokeStruct *ps, UInt16 pokeID)
+static const struct PokeStruct* pokeGetStruct(UInt16 pokeID)
 {
-	const struct PokeStruct *src;
-	Boolean ret = false;
-	MemHandle mh;
+	const struct PokeStruct *structs;
 	
 	if (!pokeID--)
-		return false;
-	
-	mh = DmGet1Resource('INFO', 0);
-	if (!mh)
-		return false;
+		return NULL;
 	
-	src = MemHandleLock(mh);
-	if (pokeID < MemHandleSize(mh) / sizeof(struct PokeStruct)) {
+	FtrGet(appFileCreator, ftrPokeInfoState, (UInt32*)&structs);
 	
-		ret = true;
-		*ps = src[pokeID];
-	}
-	MemHandleUnlock(mh);
-	DmReleaseResource(mh);
+	if (MemPtrSize((void*)structs) <= sizeof(struct PokeStruct[pokeID]))
+		return NULL;
 	
-	return ret;
+	return &structs[pokeID];
 }
 
-void pokeNameGet(char *dst, UInt16 pokeID)
+const char* pokeNameGet(UInt16 pokeID)
 {
-	struct PokeStruct ps;
+	const struct PokeStruct *ps = pokeGetStruct(pokeID);
 	
-	if (!pokeGetStruct(&ps, pokeID))
-		StrCopy(dst, "<UNKNOWN>");
-	else
-		StrCopy(dst, ps.name);
+	return ps ? ps->name : "<UNKNOWN>";
 }
 
 void pokeInfoGet(struct PokeInfo *info, UInt16 pokeID)
 {
-	struct PokeStruct ps;
+	const struct PokeStruct *ps = pokeGetStruct(pokeID);
 	
-	if (!pokeGetStruct(&ps, pokeID))
+	if (!ps)
 		MemSet(info, sizeof(struct PokeInfo), 0);
 	else
-		*info = ps.info;
+		*info = ps->info;
 }
 
 UInt8 pokeGetTypeEffectiveness(enum PokeType of, enum PokeType on)
@@ -301,4 +288,22 @@ char* __attribute__((noinline)) pokeDescrGet(UInt16 pokeID)
 	DmReleaseResource(hndl);
 	
 	return ret;
+}
+
+void pokeInfoInit(void)
+{
+	FtrSet(appFileCreator, ftrPokeInfoState, (UInt32)MemHandleLock(DmGet1Resource('INFO', 0)));
+}
+
+void pokeInfoDeinit(void)
+{
+	void *memPtr;
+	MemHandle mh;
+	
+	FtrGet(appFileCreator, ftrPokeInfoState, (UInt32*)&memPtr);
+	FtrUnregister(appFileCreator, ftrPokeInfoState);
+	
+	mh = MemPtrRecoverHandle(memPtr);
+	MemHandleUnlock(mh);
+	DmReleaseResource(mh);
 }
\ No newline at end of file
diff --git a/Src/pokeInfo.h b/Src/pokeInfo.h
index 18f839d..fbe9f10 100644
--- a/Src/pokeInfo.h
+++ b/Src/pokeInfo.h
@@ -41,18 +41,20 @@ struct PokeInfo {	//must match provided resource data
 	UInt8 hp, atk, def, spAtk, spDef, speed, type[2];
 };
 
+void pokeInfoInit(void);
 
 UInt16 pokeGetNumber(void);
 
 MemHandle pokeImageGet(UInt16 pokeID);		//call pokeImageRelease() when done!
 void pokeImageRelease(MemHandle pokeImage);
 
-void pokeNameGet(char *dst, UInt16 pokeID);	//buffer shoudl be >= POKEMON_NAME_LEN + 1 bytes long...
-
 char* pokeDescrGet(UInt16 pokeID);			//returns a pointer that the caller MUST free
 
+//FAST calls. These next three functions ae VERY FAST, you need not cache their results, just call them as needed!
+const char* pokeNameGet(UInt16 pokeID);	//buffer shoudl be >= POKEMON_NAME_LEN + 1 bytes long...
 void pokeInfoGet(struct PokeInfo *info, UInt16 pokeID);
-
 UInt8 pokeGetTypeEffectiveness(enum PokeType of, enum PokeType on);
 
+void pokeInfoDeinit(void);
+
 #endif
