commit 7cc29bea7d8bea37ded5acd311080a549e1b1970
Author: Dmitry Grinberg <dmitrygr@gmail.com>
Date:   Fri Dec 30 15:06:08 2022 -0600

    store effectiveness better

diff --git a/Rsc/Palmkedex_Rsc.rcp b/Rsc/Palmkedex_Rsc.rcp
index 081c51e..84e4eea 100644
--- a/Rsc/Palmkedex_Rsc.rcp
+++ b/Rsc/Palmkedex_Rsc.rcp
@@ -305,37 +305,6 @@ BEGIN
 	BITMAP "Rsc/images/interface/fairy-8.bmp" BPP 8 COMPRESS
 END
 
-
-// ███████ ███████ ███████ ███████  ██████ ████████ ██ ██    ██ ███████ ███    ██ ███████ ███████ ███████ 
-// ██      ██      ██      ██      ██         ██    ██ ██    ██ ██      ████   ██ ██      ██      ██      
-// █████   █████   █████   █████   ██         ██    ██ ██    ██ █████   ██ ██  ██ █████   ███████ ███████ 
-// ██      ██      ██      ██      ██         ██    ██  ██  ██  ██      ██  ██ ██ ██           ██      ██ 
-// ███████ ██      ██      ███████  ██████    ██    ██   ████   ███████ ██   ████ ███████ ███████ ███████ 
-
-
-DATA "pEFF" ID 0001 "scripts/bin/pEFF0001.bin"
-DATA "pEFF" ID 0002 "scripts/bin/pEFF0002.bin"
-DATA "pEFF" ID 0003 "scripts/bin/pEFF0003.bin"
-DATA "pEFF" ID 0004 "scripts/bin/pEFF0004.bin"
-DATA "pEFF" ID 0005 "scripts/bin/pEFF0005.bin"
-DATA "pEFF" ID 0006 "scripts/bin/pEFF0006.bin"
-DATA "pEFF" ID 0007 "scripts/bin/pEFF0007.bin"
-DATA "pEFF" ID 0008 "scripts/bin/pEFF0008.bin"
-DATA "pEFF" ID 0009 "scripts/bin/pEFF0009.bin"
-DATA "pEFF" ID 0010 "scripts/bin/pEFF0010.bin"
-DATA "pEFF" ID 0011 "scripts/bin/pEFF0011.bin"
-DATA "pEFF" ID 0012 "scripts/bin/pEFF0012.bin"
-DATA "pEFF" ID 0013 "scripts/bin/pEFF0013.bin"
-DATA "pEFF" ID 0014 "scripts/bin/pEFF0014.bin"
-DATA "pEFF" ID 0015 "scripts/bin/pEFF0015.bin"
-DATA "pEFF" ID 0016 "scripts/bin/pEFF0016.bin"
-DATA "pEFF" ID 0017 "scripts/bin/pEFF0017.bin"
-DATA "pEFF" ID 0018 "scripts/bin/pEFF0018.bin"
-DATA "pEFF" ID 0019 "scripts/bin/pEFF0019.bin"
-DATA "pEFF" ID 0020 "scripts/bin/pEFF0020.bin"
-DATA "pEFF" ID 0021 "scripts/bin/pEFF0021.bin"
-
-
 // ██████  ███████ ██   ██     ██████   █████  ████████  █████  
 // ██   ██ ██       ██ ██      ██   ██ ██   ██    ██    ██   ██ 
 // ██   ██ █████     ███       ██   ██ ███████    ██    ███████ 
diff --git a/Src/pokeInfo.c b/Src/pokeInfo.c
index 4a9496e..65591ec 100644
--- a/Src/pokeInfo.c
+++ b/Src/pokeInfo.c
@@ -29,7 +29,31 @@ struct BitBufferR {
 	UInt8 numBitsHere;
 };
 
-
+static const UInt8 mTypeEffectiveness[PokeTypesCount][PokeTypesCount] = {
+	//effectiveness of type N on type M is encoded in [N][M]
+	//16 = 4x, 8x = 2x, 4 = 1x, 2 = 0.5x, 1 = 0.25x, 0 = 0x
+	[PokeTypeNone]		= {4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
+	[PokeTypeNormal]	= {4,4,4,4,4,4,2,4,4,4,4,0,4,4,4,2,4,4,4,4,4},
+	[PokeTypeFire]		= {4,4,2,2,8,4,2,4,8,4,4,4,8,4,4,8,4,2,4,4,4},
+	[PokeTypeWater]		= {4,4,8,2,2,4,8,8,4,4,4,4,4,4,4,4,4,2,4,4,4},
+	[PokeTypeGrass]		= {4,4,2,8,2,4,8,8,4,2,4,4,2,2,4,2,4,2,4,4,4},
+	[PokeTypeElectric]	= {4,4,4,8,2,2,4,0,4,8,4,4,4,4,4,4,4,2,4,4,4},
+	[PokeTypeRock]		= {4,4,8,4,4,4,4,2,8,8,2,4,8,4,4,2,4,4,4,4,4},
+	[PokeTypeGround]	= {4,4,8,4,2,8,8,4,4,0,4,4,2,8,4,8,4,4,4,4,4},
+	[PokeTypeIce]		= {4,4,2,2,8,4,4,8,2,8,4,4,4,4,4,2,4,8,4,4,4},
+	[PokeTypeFlying]	= {4,4,4,4,8,2,2,4,4,4,8,4,8,4,4,2,4,4,4,4,4},
+	[PokeTypeFighting]	= {4,8,4,4,4,4,8,4,8,2,4,0,2,2,2,8,8,4,2,4,4},
+	[PokeTypeGhost]		= {4,0,4,4,4,4,4,4,4,4,4,8,4,4,8,4,2,4,4,4,4},
+	[PokeTypeBug]		= {4,4,2,4,8,4,4,4,4,2,2,2,4,2,8,2,8,4,2,4,4},
+	[PokeTypePoison]	= {4,4,4,4,8,4,2,2,4,4,4,2,4,2,4,0,4,4,8,4,4},
+	[PokeTypePsychic]	= {4,4,4,4,4,4,4,4,4,4,8,4,4,8,2,2,0,4,4,4,4},
+	[PokeTypeSteel]		= {4,4,2,2,4,2,8,4,8,4,4,4,4,4,4,2,4,4,8,4,4},
+	[PokeTypeDark]		= {4,4,4,4,4,4,4,4,4,4,2,8,4,4,8,4,2,4,2,4,4},
+	[PokeTypeDragon]	= {4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,4,8,0,4,4},
+	[PokeTypeFairy]		= {4,4,2,4,4,4,4,4,4,4,8,4,4,2,4,2,8,8,4,4,4},
+	[PokeTypeUnknown]	= {4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
+	[PokeTypeShadow]	= {4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
+};
 
 UInt16 pokeGetNumber(void)
 {
@@ -110,14 +134,12 @@ void pokeInfoGet(struct PokeInfo *info, UInt16 pokeID)
 
 UInt8 pokeGetTypeEffectiveness(enum PokeType of, enum PokeType on)
 {
-	MemHandle pEffHndl = DmGet1Resource('pEFF', (UInt8)of);
-	const UInt8 *vals = MemHandleLock(pEffHndl);
-	UInt8 ret = vals[((UInt8)on) - 1];
-	
-	MemHandleUnlock(pEffHndl);
-	DmReleaseResource(pEffHndl);
+	if (of == PokeTypeNone21)
+		of = PokeTypeNone;
+	if (on == PokeTypeNone21)
+		on = PokeTypeNone;
 	
-	return ret;
+	return mTypeEffectiveness[of][on] * 25;
 }
 
 static UInt8 bbRead(struct BitBufferR *bb)	//read a bit
@@ -183,7 +205,7 @@ char* __attribute__((noinline)) pokeDescrGet(UInt16 pokeID)
 	
 	if (!pokeID)
 		return NULL;
-	
+		
 	hndl = DmGet1Resource('DESC', 0);
 	if (!hndl)
 		return NULL;
diff --git a/Src/pokeInfo.h b/Src/pokeInfo.h
index 4cfbe6d..6aa0fbc 100644
--- a/Src/pokeInfo.h
+++ b/Src/pokeInfo.h
@@ -31,7 +31,8 @@ enum PokeType {
 	PokeTypeFairy,
 	PokeTypeUnknown,
 	PokeTypeShadow,
-	PokeTypeNone21,	//used as second type for pokes that lack a first (BEFORE REFACTORING)
+	PokeTypesCount,
+	PokeTypeNone21 = 21,	//used as second type for pokes that lack a first (BEFORE REFACTORING)
 };
 
 struct PokeInfo {	//must match provided resource data
