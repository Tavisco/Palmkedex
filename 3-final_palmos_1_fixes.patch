commit c42e2327664f713eba0cec29754fde4b949cb60a
Author: Dmitry Grinberg <dmitrygr@gmail.com>
Date:   Tue Dec 27 21:28:37 2022 -0600

    Fixes for PalmOS 1.0

diff --git a/Rsc/Palmkedex_Rsc.h b/Rsc/Palmkedex_Rsc.h
index 56fe43a..0091eb8 100644
--- a/Rsc/Palmkedex_Rsc.h
+++ b/Rsc/Palmkedex_Rsc.h
@@ -1,9 +1,8 @@
 /* pilrc generated file.  Do not edit!*/
-#define BmpMissingPokemon 1038
-#define PkmnTypePopUpList 1037
-#define PkmnTypePopUpTrigger 1036
-#define PkmnTypeForm 1035
-#define PkmnMainDescScroll 1034
+#define BmpMissingPokemon 1037
+#define PkmnTypePopUpList 1036
+#define PkmnTypePopUpTrigger 1035
+#define PkmnTypeForm 1034
 #define PkmnMainDescField 1033
 #define PkmnMainPopUpList 1032
 #define PkmnMainPopUpTrigger 1031
diff --git a/Rsc/Palmkedex_Rsc.rcp b/Rsc/Palmkedex_Rsc.rcp
index 799f752..bf6f93c 100644
--- a/Rsc/Palmkedex_Rsc.rcp
+++ b/Rsc/Palmkedex_Rsc.rcp
@@ -123,7 +123,7 @@ BEGIN
 	
 	FORMBITMAP AT (1 16) BITMAP LoadingBitmapFamily
 
-	BUTTON "Back" ID PkmnMainBackButton  AT (2 146 AUTO AUTO)
+	BUTTON "Back" ID PkmnMainBackButton  AT (89 1 30 10)
 	LABEL "HP:" ID PkmnMainHPLabel  AT (117 19) FONT 1
 	LABEL "   " ID PkmnMainHPValueLabel  AT (138 19)
 	LABEL "   " ID PkmnMainAtkValueLabel   AT (138 31)
@@ -136,11 +136,10 @@ BEGIN
 	LABEL "   " ID PkmnMainSPDefValueLabel     AT (138 67)
 	LABEL "Speed:" ID PkmnMainSpeedLabel     AT (102 79) FONT 1
 	LABEL "   " ID PkmnMainSpeedValueLabel     AT (138 79)
-	POPUPTRIGGER "General" ID PkmnMainPopUpTrigger  AT (109 1 AUTO AUTO)
-	LIST  "General" "Type" ID PkmnMainPopUpList  AT (PREVLEFT PREVBOTTOM+1 PREVWIDTH 35) VISIBLEITEMS 2 NONUSABLE
+	POPUPTRIGGER "Info" ID PkmnMainPopUpTrigger  AT (121 1 39 12)  LEFTANCHOR
+	LIST  "Info" "Type" ID PkmnMainPopUpList  AT (135 1 25 24) VISIBLEITEMS 2 NONUSABLE
 	POPUPLIST ID PkmnMainPopUpTrigger  PkmnMainPopUpList
-	FIELD ID PkmnMainDescField  AT (1 96 151 51) MAXCHARS 1024  MULTIPLELINES NONEDITABLE HASSCROLLBAR
-	SCROLLBAR ID PkmnMainDescScroll AT (153 96 7 51) USABLE VALUE 0 MIN 0 MAX 0 PAGESIZE 10
+	FIELD ID PkmnMainDescField  AT (0 94 160 66) MAXCHARS 1024  MULTIPLELINES NONEDITABLE HASSCROLLBAR
 END
 
 
diff --git a/Src/PkmnMain.c b/Src/PkmnMain.c
index b4c1e38..d3fd662 100644
--- a/Src/PkmnMain.c
+++ b/Src/PkmnMain.c
@@ -105,11 +105,9 @@ void LoadPkmnStats()
 
 void SetDescriptionField(UInt16 selectedPkmnId)
 {
-	UInt16 scrollPos;
 	UInt16 textHeight;
 	UInt16 fieldHeight;
 	Int16 maxValue;
-	ScrollBarPtr bar;
 	MemHandle hndl = DmGet1Resource('pDSC', selectedPkmnId);
 	Char *pkmnDesc = MemHandleLock(hndl);
 	FieldType *fld = GetObjectPtr(PkmnMainDescField);
@@ -118,19 +116,6 @@ void SetDescriptionField(UInt16 selectedPkmnId)
 	FldRecalculateField(fld, true);
 
 	MemHandleUnlock(hndl);
-
-	bar = GetObjectPtr(PkmnMainDescScroll);
-
-	FldGetScrollValues(fld, &scrollPos, &textHeight, &fieldHeight);
-
-	if (textHeight > fieldHeight)
-		maxValue = textHeight - fieldHeight;
-	else if (scrollPos)
-		maxValue = scrollPos;
-	else
-		maxValue = 0;
-
-	SclSetScrollBar(bar, scrollPos, 0, maxValue, fieldHeight - 1);
 }
 
 void DrawTypes(UInt8 *pkmnBytes)
@@ -229,17 +214,6 @@ static void PkmnDescriptionScroll(WinDirectionType direction)
 	{
 		linesToScroll = FldGetVisibleLines(fld) - 1;
 		FldScrollField(fld, linesToScroll, direction);
-
-		// Update the scroll bar.
-		bar = GetObjectPtr(PkmnMainDescScroll);
-		SclGetScrollBar(bar, &value, &min, &max, &pageSize);
-
-		if (direction == winUp)
-			value -= linesToScroll;
-		else
-			value += linesToScroll;
-
-		SclSetScrollBar(bar, value, min, max, pageSize);
 	}
 }
 
diff --git a/Src/imgDraw.c b/Src/imgDraw.c
index 6ead901..b3669e4 100644
--- a/Src/imgDraw.c
+++ b/Src/imgDraw.c
@@ -27,10 +27,12 @@ static Boolean isSonyHiResSupported(void)
 
 void imgDrawStateFree(struct DrawState *ds)
 {
-	if (ds->depth < 8)
-		MemPtrFree(ds->b);	//we allocated it manually - free it so too
-	else
-		BmpDelete(ds->b);
+	if (ds->b) {
+		if (ds->depth < 8)
+			MemPtrFree(ds->b);	//we allocated it manually - free it so too
+		else
+			BmpDelete(ds->b);
+	}
 	MemPtrFree(ds);
 }
 
@@ -226,6 +228,8 @@ static unsigned char imgDrawHdrCbk(struct DrawState *ds, uint32_t w, uint32_t h,
 		realStride = ((w * curDepth) + 15) / 16 * 2;
 		virtualStride = realStride * 8 / curDepth;
 		bmp1 = MemPtrNew(sizeof(struct BitmapTypeV1) + virtualStride * h);	//enough space for 8bpp, will shrink later - our decoder emits 8bpp
+		if (!bmp1)
+			return false;
 		MemSet(bmp1, sizeof(*bmp1), 0);
 		bmp1->width = w;
 		bmp1->height = h;
@@ -271,7 +275,7 @@ static int imgDecodeCall(struct DrawState *ds, const void *data, uint32_t dataSz
 	}
 	
 	//repack
-	if (ds->depth < 8) {
+	if (ret >= 0 && ds->depth < 8) {
 		
 		struct BitmapTypeV1 *bmp1 = (struct BitmapTypeV1*)ds->b;
 		aciRepack(ds->bits, bmp1->height * (bmp1->rowBytes * 8 / ds->depth), ds->depth);
@@ -281,12 +285,14 @@ static int imgDecodeCall(struct DrawState *ds, const void *data, uint32_t dataSz
 	return ret;
 }
 
-void imgDrawAt(struct DrawState **dsP, const void *data, uint32_t dataSz, int16_t x, int16_t y, uint32_t expectedW, uint32_t expectedH)
+bool imgDrawAt(struct DrawState **dsP, const void *data, uint32_t dataSz, int16_t x, int16_t y, uint32_t expectedW, uint32_t expectedH)
 {
 	uint8_t densitySupportFlags = 0;
 	struct DrawState *ds;
 	int ret;
 	
+	*dsP = NULL;
+	
 	if (isHighDensitySupported())
 		densitySupportFlags |= PNG_VARIOUS_DENSITIES_SUPPORTED;
 	if (isSonyHiResSupported())
@@ -294,17 +300,22 @@ void imgDrawAt(struct DrawState **dsP, const void *data, uint32_t dataSz, int16_
 	
 	ds = (struct DrawState *)MemPtrNew(sizeof(struct DrawState));
 	if (!ds)
-		return;
+		return false;
 	MemSet(ds, sizeof(*ds), 0);
 	ds->expectedW = expectedW;
 	ds->expectedH = expectedH;
 	ds->densitySupportFlags = densitySupportFlags;
 
 	ret = imgDecodeCall(ds, data, dataSz);
-	ErrFatalDisplayIf(ret < 0, "Error decoding image");
-	
+	if (ret < 0) {
+		
+		imgDrawStateFree(ds);
+		return false;
+	}
+		
 	imgDrawRedraw(ds, x, y);
 	
 	*dsP = ds;
+	return true;
 }
 
diff --git a/Src/imgDraw.h b/Src/imgDraw.h
index 377b9e1..bcf4f52 100644
--- a/Src/imgDraw.h
+++ b/Src/imgDraw.h
@@ -8,7 +8,7 @@ struct BitmapType;
 struct DrawState;
 
 //decodes and stores state in "dsP"
-void imgDrawAt(struct DrawState **dsP, const void *data, uint32_t dataSz, int16_t x, int16_t y, uint32_t expectedW, uint32_t expectedH); 
+bool imgDrawAt(struct DrawState **dsP, const void *data, uint32_t dataSz, int16_t x, int16_t y, uint32_t expectedW, uint32_t expectedH); 
 
 //delete am already-decoded state
 void imgDrawStateFree(struct DrawState *ds);
