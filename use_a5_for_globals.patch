commit 9ad4f4c87d5f58ffd8a9a8093b27492121256b0b
Author: Dmitry Grinberg <dmitrygr@gmail.com>
Date:   Fri Jan 6 19:49:58 2023 -0600

    use a5 for globals, not features

diff --git a/Rsc/Palmkedex_Rsc.rcp b/Rsc/Palmkedex_Rsc.rcp
index 1500ba6..aaf8582 100644
--- a/Rsc/Palmkedex_Rsc.rcp
+++ b/Rsc/Palmkedex_Rsc.rcp
@@ -10,16 +10,16 @@ DATA "code" ID 1 "code0001.68k.bin"
 DATA "armc" ID 1 "armc0001.arm.bin"
 #endif
 
-// these next two resources are usually optional, except in PalmOS 1.0, where they are not...
 HEX "code" ID 0
-	0x00 0x00 0x00 0x04
+	0x00 0x00 0x00 0x24		//4 + bytesOfGlobals
 	0x00 0x00 0x00 0x00
 
 HEX "data" ID 0
 	0x00 0x00 0x00 0x00		//ignored if data res ends after init parts
 	
-	//init data 1/3
-	0x00 0x00 0x00 0x00		//offset to start of "initing"
+	//init data 1/3 (zero our globals)
+	0x00 0x00 0x00 0x04		//offset : 0x04
+	0x5f					//data: 32 0x00 bytes
 	0x00					//END of init data
 	
 	//init data 2/3
diff --git a/Src/Main.c b/Src/Main.c
index 60c6025..618916c 100644
--- a/Src/Main.c
+++ b/Src/Main.c
@@ -63,11 +63,10 @@ static Boolean myCaselessStringNcmp(const char *as, const char *bs, UInt16 len)
 
 static void FilterDataSet(void)
 {
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	const char *searchStr = FldGetTextPtr(GetObjectPtr(MainSearchField));
-	SharedVariables *sharedVars;
 	UInt16 i;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 
 	if (!searchStr || !searchStr[0]) {	//no search
 
@@ -131,11 +130,10 @@ void OpenAboutDialog()
 
 static void UpdateList(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	ListType *list;
 
 	FilterDataSet();
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 
 	list = GetObjectPtr(MainSearchList);
 	// Set custom list drawing callback function.
@@ -148,9 +146,7 @@ static void UpdateList(void)
 
 Int16 GetCurrentListSize()
 {
-	SharedVariables *sharedVars;
-
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 
 	return sharedVars->sizeAfterFiltering;
 }
@@ -162,13 +158,11 @@ static Boolean IsSelectionValid(UInt16 selection)
 
 static void calcPokemonNumberWidth(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	UInt8 i, maxWidth = 0;
 	FontID oldFont;
 	char ch[4];
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	//calculate list font width (palmos has no kerning)
 	oldFont = FntSetFont(boldFont);
 	ch[3] = '#';
@@ -187,10 +181,9 @@ static void calcPokemonNumberWidth(void)
 
 void OpenMainPkmnForm(Int16 selection)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	UInt16 selectedPkmn;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 	selectedPkmn = GetPkmnId(selection);
 
 	if (IsSelectionValid((UInt16) selectedPkmn))
@@ -205,15 +198,12 @@ void OpenMainPkmnForm(Int16 selection)
 
 UInt16 GetPkmnId(Int16 selection)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
 	if (sharedVars->sizeAfterFiltering == pokeGetNumber())
-	{
 		return selection + 1;
-	} else {
+	else
 		return sharedVars->filteredPkmnNumbers[selection];
-	}
 }
 
 /*
diff --git a/Src/Palmkedex.c b/Src/Palmkedex.c
index f31efb1..5a57184 100644
--- a/Src/Palmkedex.c
+++ b/Src/Palmkedex.c
@@ -133,12 +133,10 @@ static void AppEventLoop(void)
 
 static void makePokeFirstLetterLists(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	const UInt16 *chains;
 	UInt16 i;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	sharedVars->indexHandle = DmGet1Resource('INDX', 0);
 
 	WinGetDisplayExtent(&sharedVars->prevDispW, &sharedVars->prevDispH);
@@ -160,7 +158,7 @@ static void MakeSharedVariables(void)
 
 	sharedVars->sizeAfterFiltering = pokeGetNumber();
 
-	FtrSet(appFileCreator, ftrShrdVarsNum, (UInt32)sharedVars);
+	*globalsSlotPtr(GLOBALS_SLOT_SHARED_VARS) = sharedVars;
 }
 
 static Err SetColorDepth(void)
@@ -214,16 +212,14 @@ static Err AppStart(void)
 
 static void FreeSharedVariables(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	UInt16 i;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	MemHandleUnlock(sharedVars->indexHandle);
 	DmReleaseResource(sharedVars->indexHandle);
 
 	MemPtrFree(sharedVars);
-	FtrUnregister(appFileCreator, ftrShrdVarsNum);
+	*globalsSlotPtr(GLOBALS_SLOT_SHARED_VARS) = NULL;
 }
 
 /*
@@ -270,15 +266,13 @@ static Err subscribeToNotifs(void)
 {
 	Err e = errNone;
 #ifdef SCREEN_RESIZE_SUPPORT
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	UInt16 myCard;
 	LocalID myLID;
 
 	if (!sysHasNotifMgr())
 		return errNone;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	e = SysCurAppDatabase(&myCard, &myLID);
 
 	if (e == errNone)
diff --git a/Src/Palmkedex.h b/Src/Palmkedex.h
index 1c7310b..ee76df5 100644
--- a/Src/Palmkedex.h
+++ b/Src/Palmkedex.h
@@ -12,6 +12,37 @@
  * Internal Constants
  *********************************************************************/
 
+#ifndef __ARM__
+
+	//globals (8 slots maximum, each stores a void*, zero-inited at app start)
+
+	#define NUM_GLOBALS_SLOTS		8
+
+	register void** a5 asm("a5");
+	
+	static inline void** globalsSlotPtr(UInt8 slotID)	//[0] is reserved
+	{
+		if (!slotID || slotID > NUM_GLOBALS_SLOTS)
+			return NULL;
+		
+		return a5 + slotID;
+	}
+	
+	static inline void* globalsSlotVal(UInt8 slotID)	//[0] is reserved
+	{
+		if (!slotID || slotID > NUM_GLOBALS_SLOTS)
+			return NULL;
+		
+		return a5[slotID];
+	}
+
+	#define GLOBALS_SLOT_POKE_IMAGE			1
+	#define GLOBALS_SLOT_SHARED_VARS		2
+	#define GLOBALS_SLOT_OS_PATCH_STATE		3
+	#define GLOBALS_SLOT_POKE_INFO_STATE	4
+
+#endif
+
 #include "Src/pokeInfo.h"
 
 #define POKEMON_TYPE_IMAGES_BASE		9000
@@ -22,11 +53,6 @@
 #define appPrefID 0x00
 #define appPrefVersionNum 0x01
 
-#define ftrPokeImage			0
-#define ftrShrdVarsNum			1
-#define ftrOsPatchState			2
-#define ftrPokeInfoState		3
-
 #define QUADRUPLE_DAMAGE 400
 #define DOUBLE_DAMAGE    200
 #define HALF_DAMAGE      50
diff --git a/Src/PkmnMain.c b/Src/PkmnMain.c
index be6f362..9fcfa96 100644
--- a/Src/PkmnMain.c
+++ b/Src/PkmnMain.c
@@ -59,18 +59,18 @@ static void redrawDecodedSprite(struct DrawState *ds)
 static void DrawPkmnSprite(UInt16 selectedPkmnId)
 {
 	MemHandle imgMemHandle;
-	MemPtr pngData;
-	UInt32 size;
-	int ret;
+	struct DrawState *ds;
 	BitmapType *bmpP;
+	MemPtr pngData;
 	WinHandle win;
+	UInt32 size;
 	Err error;
-	struct DrawState *ds = NULL;
+	int ret;
 
 	// Check if the PNG for the current pkmn
 	// is already decoded in memory
-	error = FtrGet(appFileCreator, ftrPokeImage, (UInt32*)&ds);
-	if (error == errNone && ds)
+	ds = (struct DrawState*)globalsSlotVal(GLOBALS_SLOT_POKE_IMAGE);
+	if (ds)
 	{
 		// If it is, draw it and return
 		redrawDecodedSprite(ds);
@@ -89,7 +89,7 @@ static void DrawPkmnSprite(UInt16 selectedPkmnId)
 		pokeImageRelease(imgMemHandle);
 	}
 	// And store its pointer to quickly redraw it
-	FtrSet(appFileCreator, ftrPokeImage, (UInt32)ds);
+	*globalsSlotPtr(GLOBALS_SLOT_POKE_IMAGE) = ds;
 
 	if (!ds)
 		DrawPkmnPlaceholder();
@@ -97,11 +97,9 @@ static void DrawPkmnSprite(UInt16 selectedPkmnId)
 
 static void drawFormCustomThings(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	struct PokeInfo info;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	pokeInfoGet(&info, sharedVars->selectedPkmnId);
 
 	DrawTypes(&info);
@@ -110,13 +108,11 @@ static void drawFormCustomThings(void)
 
 void LoadPkmnStats(void)
 {
-	SharedVariables *sharedVars;
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 	struct PokeInfo info;
 	FormType *frm;
 	ListType *list;
 
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
-
 	pokeInfoGet(&info, sharedVars->selectedPkmnId);
 
 	frm = FrmGetActiveForm();
@@ -234,10 +230,12 @@ static void unregisterCurrentPng(void)
 {
 	struct DrawState *ds;
 
-	if (FtrGet(appFileCreator, ftrPokeImage, (UInt32*)&ds) == errNone && ds)
+	ds = (struct DrawState*)globalsSlotVal(GLOBALS_SLOT_POKE_IMAGE);
+
+	if (ds)
 	{
 		imgDrawStateFree(ds);
-		FtrUnregister(appFileCreator, 0);
+		*globalsSlotPtr(GLOBALS_SLOT_POKE_IMAGE) = NULL;
 	}
 }
 
@@ -311,11 +309,11 @@ static Boolean PkmnMainFormDoCommand(UInt16 command)
 	*/
 	static void drawMagicandTrackPenRelease(Int16 x, Int16 y)
 	{
+		SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 		struct m68kLCDC *LCDC = (struct m68kLCDC*)0xfffffa00;
 		UInt8 prevVPW, prevLBAR, prevLPICF;
 		UInt8 *restrict newSSA = NULL;
 		Boolean down, success = false;
-		SharedVariables *sharedVars;
 		UInt32 prevSSA, romVersion;
 		MemHandle imgMemHandle;
 		DmOpenRef dbRef;
@@ -325,9 +323,6 @@ static Boolean PkmnMainFormDoCommand(UInt16 command)
 		if (errNone == FtrGet(sysFtrCreator, sysFtrNumROMVersion, &romVersion) && romVersion >= sysMakeROMVersion(3,0,0,sysROMStageDevelopment,0))
 			return;
 
-		if (errNone != FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars))
-			return;
-
 		dbRef = DmOpenDatabaseByTypeCreator('pSPR', 'PKSP', dmModeReadOnly);
 		if (dbRef) {
 
diff --git a/Src/PkmnType.c b/Src/PkmnType.c
index 58ec3d9..4e3b4be 100644
--- a/Src/PkmnType.c
+++ b/Src/PkmnType.c
@@ -182,18 +182,14 @@ static void SetMenuSelection(void)
 
 static void drawFormCustomThings(void)
 {
-	SharedVariables *sharedVars;
-
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 
 	DrawTypeIcons(sharedVars->selectedPkmnId);
 }
 
 static void InitializeForm(void)
 {
-	SharedVariables *sharedVars;
-
-	FtrGet(appFileCreator, ftrShrdVarsNum, (UInt32*)&sharedVars);
+	SharedVariables *sharedVars = (SharedVariables*)globalsSlotVal(GLOBALS_SLOT_SHARED_VARS);
 
     SetMenuSelection();
     SetFormTitle(sharedVars);
diff --git a/Src/osPatches.c b/Src/osPatches.c
index c8e7c67..b18fd30 100644
--- a/Src/osPatches.c
+++ b/Src/osPatches.c
@@ -24,21 +24,17 @@ struct OsPatchState {
 
 static struct OsPatchState* osPatchesGetState(Boolean allocIfNone)
 {
-	struct OsPatchState *ret;
+	struct OsPatchState **retP = (struct OsPatchState**)globalsSlotPtr(GLOBALS_SLOT_OS_PATCH_STATE);
+	struct OsPatchState *ret = *retP;
 
-	if (errNone != FtrGet(appFileCreator, ftrOsPatchState, (UInt32*)&ret)) {
-
-		if (allocIfNone) {
-
-			ret = MemPtrNew(sizeof(struct OsPatchState));
-			if (ret) {
+	if (!ret && allocIfNone) {
+		
+		ret = MemPtrNew(sizeof(struct OsPatchState));
+		if (ret) {
 
-				MemSet(ret, sizeof(struct OsPatchState), 0);
-				FtrSet(appFileCreator, ftrOsPatchState, (UInt32)ret);
-			}
+			MemSet(ret, sizeof(struct OsPatchState), 0);
+			*retP = ret;
 		}
-		else
-			ret = NULL;
 	}
 
 	return ret;
@@ -474,7 +470,7 @@ void osPatchesRemove(void)
 		SysSetTrapAddress(sysTrapWinDrawBitmap, osps->oldTrapWinDrawBitmap);
 
 	MemPtrFree(osps);
-	FtrUnregister(appFileCreator, ftrOsPatchState);
+	*globalsSlotPtr(GLOBALS_SLOT_OS_PATCH_STATE) = NULL;
 }
 
 void osPatchesDrawingInterceptionStateSet(Boolean enabled)
diff --git a/Src/pokeInfo.c b/Src/pokeInfo.c
index 6c907f1..05d00ea 100644
--- a/Src/pokeInfo.c
+++ b/Src/pokeInfo.c
@@ -85,13 +85,11 @@ void pokeImageRelease(MemHandle pokeImage)
 
 static const struct PokeStruct* pokeGetStruct(UInt16 pokeID)
 {
-	const struct PokeStruct *structs;
+	const struct PokeStruct *structs = globalsSlotVal(GLOBALS_SLOT_POKE_INFO_STATE);
 
 	if (!pokeID--)
 		return NULL;
 
-	FtrGet(appFileCreator, ftrPokeInfoState, (UInt32*)&structs);
-
 	if (MemPtrSize((void*)structs) <= sizeof(struct PokeStruct[pokeID]))
 		return NULL;
 
@@ -184,7 +182,7 @@ char* __attribute__((noinline)) pokeDescrGet(UInt16 pokeID)
 	if (!pokeID)
 		return NULL;
 
-	hndl = DmGet1Resource('DESC', 0);
+	hndl = DmGetResource('DESC', 0);
 	if (!hndl)
 		return NULL;
 
@@ -305,16 +303,18 @@ char* __attribute__((noinline)) pokeDescrGet(UInt16 pokeID)
 
 void pokeInfoInit(void)
 {
-	FtrSet(appFileCreator, ftrPokeInfoState, (UInt32)MemHandleLock(DmGet1Resource('INFO', 0)));
+	MemHandle mh = DmGet1Resource('INFO', 0);
+	void *mp = MemHandleLock(mh);
+	
+	*globalsSlotPtr(GLOBALS_SLOT_POKE_INFO_STATE) = mp;
 }
 
 void pokeInfoDeinit(void)
 {
-	void *memPtr;
+	void *memPtr = globalsSlotVal(GLOBALS_SLOT_POKE_INFO_STATE);
 	MemHandle mh;
 
-	FtrGet(appFileCreator, ftrPokeInfoState, (UInt32*)&memPtr);
-	FtrUnregister(appFileCreator, ftrPokeInfoState);
+	*globalsSlotPtr(GLOBALS_SLOT_POKE_INFO_STATE) = NULL;
 
 	mh = MemPtrRecoverHandle(memPtr);
 	MemHandleUnlock(mh);
