commit 10129d4dfdca95b2fd3b00a1f3931346a75f0d67
Author: Dmitry Grinberg <dmitrygr@gmail.com>
Date:   Fri Dec 23 01:19:47 2022 -0600

    speedup: skip crc calc on PNG decode

diff --git a/Makefile b/Makefile
index fef5cc1..6e7783a 100644
--- a/Makefile
+++ b/Makefile
@@ -8,7 +8,7 @@ OBJCOPY			=	$(TOOLCHAIN)/m68k-none-elf-objcopy
 ARMCC			=	$(ARMTOOLCHAIN)gcc
 ARMLD			=	$(ARMTOOLCHAIN)gcc
 ARMOBJCOPY		=	$(ARMTOOLCHAIN)objcopy
-COMMON			=	-DPNGLE_NO_GAMMA_CORRECTION
+COMMON			=	-DPNGLE_NO_GAMMA_CORRECTION -DPNGLE_SKIP_CRC
 M68KCOMMON		=	$(COMMON) -Wno-multichar -funsafe-math-optimizations -Os -m68000 -mno-align-int -mpcrel -fpic -fshort-enums
 ARMCOMMON		=	$(COMMON) -Os -march=armv4t -mthumb -mno-unaligned-access -ffixed-r9 -ffixed-r10 -ffixed-r11 -fomit-frame-pointer -D__ARM__ -ffreestanding -fpic -mthumb-interwork
 WARN			=	-Wsign-compare -Wextra -Wall -Wno-unused-parameter -Wno-old-style-declaration -Wno-unused-function -Wno-unused-variable -Wno-error=cpp -Wno-error=switch
diff --git a/Src/pngle.c b/Src/pngle.c
index c25f804..67f6ae2 100644
--- a/Src/pngle.c
+++ b/Src/pngle.c
@@ -113,7 +113,10 @@ struct _pngle_t {
 	pngle_state_t state;
 	uint32_t chunk_type;
 	uint32_t chunk_remain;
+
+#ifndef PNGLE_SKIP_CRC
 	mz_ulong crc32;
+#endif
 
 	// scanline decoder (reset on every set_interlace_pass() call)
 	uint8_t *scanline_ringbuf;
@@ -754,7 +757,9 @@ static int pngle_feed_internal(pngle_t *pngle, const uint8_t *buf, size_t len)
 		pngle->chunk_remain = read_uint32(buf);
 		pngle->chunk_type = read_uint32(buf + 4);
 
+#ifndef PNGLE_SKIP_CRC
 		pngle->crc32 = mz_crc32(MZ_CRC32_INIT, (const mz_uint8 *)(buf + 4), 4);
+#endif
 
 		debug_printf("[pngle] Chunk '%ld' len %lu", buf + 4, pngle->chunk_remain);
 
@@ -846,7 +851,9 @@ static int pngle_feed_internal(pngle_t *pngle, const uint8_t *buf, size_t len)
 			if (pngle->chunk_remain < (uint32_t)consumed) return PNGLE_ERROR("Chunk data has been consumed too much");
 
 			pngle->chunk_remain -= consumed;
+#ifndef PNGLE_SKIP_CRC
 			pngle->crc32 = mz_crc32(pngle->crc32, (const mz_uint8 *)buf, consumed);
+#endif
 		}
 		if (pngle->chunk_remain <= 0) pngle->state = PNGLE_STATE_CRC;
 
@@ -855,14 +862,15 @@ static int pngle_feed_internal(pngle_t *pngle, const uint8_t *buf, size_t len)
 	case PNGLE_STATE_CRC:
 		if (len < 4) return 0;
 
+#ifndef PNGLE_SKIP_CRC
 		uint32_t crc32 = read_uint32(buf);
 
 		if (crc32 != pngle->crc32) {
 			debug_printf("[pngle] CRC: %08x vs %08x => NG", crc32, (uint32_t)pngle->crc32);
 			return PNGLE_ERROR("CRC mismatch");
 		}
-
 		debug_printf("[pngle] CRC: %08x vs %08x => OK", crc32, (uint32_t)pngle->crc32);
+#endif
 		pngle->state = PNGLE_STATE_FIND_CHUNK_HEADER;
 
 		// XXX:
diff --git a/Src/pngle.h b/Src/pngle.h
index e700e2e..5e26a8e 100644
--- a/Src/pngle.h
+++ b/Src/pngle.h
@@ -33,6 +33,8 @@
 extern "C" {
 #endif
 
+#define PNGLE_SKIP_CRC
+
 struct DrawState;
 
 // Main Pngle object
